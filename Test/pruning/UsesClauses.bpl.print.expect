
const unique four: int;

const unique ProducerConst: bool uses {
  axiom four == 4;
}

function ConsumerFunc(x: int) : int;

function ProducerFunc(x: int) : bool uses {
  axiom (forall x: int :: ConsumerFunc(x) == 3);
}

procedure hasAxioms();
  requires ProducerFunc(2);
  requires ProducerConst;
  ensures ConsumerFunc(4) == 3;
  ensures four == 4;



implementation hasAxioms()
{
}



procedure doesNotHaveAxioms();
  ensures ConsumerFunc(4) == 3;
  ensures four == 4;



implementation doesNotHaveAxioms()
{
}


